df2 %>% dplyr::select(year,factor_df) %>% spread(year,factor_df) %>% unnest(.id=c(0,1)
)
df2 %>% dplyr::select(year,factor_df) %>% spread(year,factor_df) %>% unnest(.id=letters)
df2 %>% dplyr::select(year,factor_df) %>% spread(year,factor_df) %>% unnest(.id="name")
df2 %>% dplyr::select(year,factor_df) %>% unnest(.id="name")
df2 %>% dplyr::select(year,factor_df) %>% unnest()
df2 %>% dplyr::select(year,factor_df) %>% unnest() %>% spread(year,prevalence)
df2 %>% dplyr::select(!!pop,factor_df) %>% spread(!!pop,factor_df) %>% unnest()
df2 %>% dplyr::select(year,factor_df) %>% spread(year,factor_df) %>% unnest()
DG_reconv$pop2004
DG_reconvNEW$pop2004
DG_reconv
fdat %>% group_by(year) %>% summarise(
r=prevalence*frequency*age_str*factfour*factfive
)
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
)
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r))
DG_reconv %>% group_by(year) %>% summarise(sum(diff2004_2005))
DG_reconv
DG_reconv %>% summarise(sum(diff2004_2005))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r),diff=c(0,diff(rr))) %>%
DG_reconv %>% summarise(sum(diff2004_2005))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r),diff=c(0,diff(rr)))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r),
diff=c(0,diff(rr,lag=1)))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r)) %>%
mutate(diff=c(0,diff(rr,lag=1)))
DG_reconv %>% summarise(sum(diff2004_2005))
DG_reconvNEW %>% summarise(sum(diff2004_2005))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r)) %>%
mutate(diff=c(0,diff(rr,lag=1)))
DG_reconv %>% summarise(sum(diff2004_2005))
DG_reconvNEW %>% summarise(sum(diff2004_2005))
DG_reconv %>% summarise(sum(diff2004_2005))/2
DG_reconv %>% summarise(sum(diff2004_2006))
DG_reconvNEW %>% summarise(sum(diff2004_2006))
DG_reconv %>% summarise(sum(diff2014_2015))
DG_reconvNEW %>% summarise(sum(diff2014_2015))
fdat %>% mutate(
r=prevalence*frequency*age_str*factfour*factfive
) %>% group_by(year) %>% summarise(rr=sum(r)) %>%
mutate(diff=c(0,diff(rr,lag=1)))
DG_reconvNEW %>% summarise(sum(diff2014_2015))
paste(factrs,collapse="*")
lapply(list.files("R/",full.names = T),source)
DG_reconv <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str, frequency,factfour,factfive
id_vars=c(Age,Gender),
#ratefunction="prevalence*frequency*age_str"
)
DG_reconv <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str, frequency,factfour,factfive
id_vars=c(Age,Gender),
#ratefunction="prevalence*frequency*age_str"
)
DG_reconv <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str, frequency,factfour,factfive
id_vars=c(Age,Gender),
#ratefunction="prevalence*frequency*age_str"
)
DG_reconv <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str, frequency,factfour,factfive,
id_vars=c(Age,Gender),
#ratefunction="prevalence*frequency*age_str"
)
lapply(list.files("R/",full.names = T),source)
DG_reconvNEW <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*age_str"
)
DG_reconv <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str,
id_vars=c(Age,Gender),
#ratefunction="prevalence*frequency*age_str"
)
DG_reconv$diff2004_2005
DG_reconvNEW$diff2004_2005
DG_reconv$pop2004
DG_reconvNEW$pop2004
fdat %>% mutate(
r=prevalence*age_str
) %>% group_by(year) %>% summarise(rr=sum(r)) %>%
mutate(diff=c(0,diff(rr,lag=1)))
DG_reconv %>% summarise(sum(diff2014_2015))
DG_reconvNEW %>% summarise(sum(diff2014_2015))
require(roxygen2)
require(devtools)
document()
document()
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
DG_reconv <- DasGupt_Npop(reconv,
pop=year,
prevalence, age_str,
id_vars=c(Age,Gender)
)
library(tidyverse)
library(DasGuptR)
data(reconv)
str(reconv)
DG_reconv <- DasGupt_Npop(reconv,
pop=year,
prevalence, age_str,
id_vars=c(Age,Gender)
)
DG_reconv2 <- DasGupt_Npop(reconv,
pop=year,
baseline=2004,
prevalence, age_str,
id_vars=c(Age,Gender)
)
DG_reconv
DG_reconv %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year))) %>%
ggplot(.,aes(x=year,y=rate,col=rate_type))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02"))+
theme_bw()+
labs(y = "Reconviction Rate",
colour = "Rate",
x = "Year")+
theme(legend.position="bottom",axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(colour = guide_legend(nrow = 3, byrow = TRUE)) +
scale_x_continuous(breaks=2004:2016,labels=2004:2016)+
geom_label(aes(x=2012,y=31,label="If reconviction rates for each group stayed\nthe same, the changing 'offender mix'\nwould mean the overall rate would still decrease"),col="#555555",size=3,label.size=NA,hjust=0,vjust=.5)+
geom_curve(aes(x=2012,y=31,xend=2012,yend=29.7),col="#555555",curvature=.2,arrow=arrow(length=unit(.03,"npc")))+
NULL
DG_reconv %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year))) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
theme_bw()+
NULL
DG_reconv2 %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year))) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
theme_bw()+
NULL
DG_reconv %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year))) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
theme_bw()+
NULL
DG_reconv %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year))) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
theme_bw()+
NULL
DG_reconv2 %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year))) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
theme_bw()+
NULL
reconv
reconv %>% filter(year==2004)
reconv %>% filter(year==2004) %>%
group_by(Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
)
reconv %>% filter(year==2004) %>%
group_by(Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
crude_rate = proportion_reconvicted*proportion_totaloffenders
)
reconv %>% filter(year==2004) %>%
group_by(Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted)/sum(proportion_totaloffenders)
)
reconv %>% filter(year==2004) %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted)/sum(proportion_totaloffenders)
)
reconv %>% filter(year==2004) %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted)*sum(proportion_totaloffenders)
)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted)*sum(proportion_totaloffenders)
)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
frequency_reconvicted = num_reconvictions / num_reconvicted,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted*proportion_totaloffenders)
)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
frequency_reconvicted = num_reconvictions / num_reconvicted,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted*proportion_totaloffenders*frequency_reconvicted)
)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total
) %>% group_by(year) %>%
summarise(
rate=sum(proportion_reconvicted*proportion_totaloffenders)
)
reconv %>%
group_by(year) %>%
summarise_at(vars(starts_with("num")),sum)
reconv %>%
group_by(year) %>%
summarise_at(vars(starts_with("num")),sum) %>%
mutate(rate=num_reconvicted/num_offenders)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
rate = proportion_reconvicted*proportion_totaloffenders
) %>% group_by(year) %>%
summarise(
rate=sum(rate)
)
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
rate = proportion_reconvicted*proportion_totaloffenders
) %>% print %>%
group_by(year) %>%
summarise(
rate=sum(rate)
)
nfact=5
r=ceiling(nfact/2)-1
all_perms=map(1:r,~unique(c(combinat::permn(c(rep(1,nfact-1-.x),rep(2,.x))), combinat::permn(c(rep(2,nfact-1-.x),rep(1,.x))))))
colnums=all_perms %>% unlist(.,recursive=F) %>% map(.,~c(which(.x>1)+(nfact-1),which(.x<2)))
#relevant later
length_perms = map_dbl(all_perms,length)
map_dbl(1:length(length_perms),~nfact*(ncol(utils::combn(nfact-1,.))))
all_perms
rep(length_perms,times=length_perms)
allfacts=c(letters[1:5],paste(letters[1:5],"1"))
allfacts[1:nfact]
allfacts[nfact+1:length(allfacts)]
allfacts=c(letters[1:5],paste(letters[1:5],collapse="1"))
allfacts
allfacts=c(letters[1:5],paste0(letters[1:5],"1"))
allfacts
allfacts[1:nfact]
allfacts[(nfact+1):length(allfacts)]
allfacts0 = allfacts[1:nfact]
allfacts1 = allfacts[(nfact+1):length(allfacts)]
apply(allperms, 1, function(x) length(which(x %in% allfacts1)))
#these are the all the combinations of P-1 factors from 2 populations
allperms<-combn(allfacts[!(allfacts %in% c(facti,paste0(facti,1)))],length(allfacts)/2-1) %>% t %>% as_tibble()
allperms
combn(allfacts[!(allfacts %in% c(facti,paste0(facti,1)))],length(allfacts)/2-1) %>% t %>% as_tibble(.name_repair = "universal")
combn(allfacts[!(allfacts %in% c(facti,paste0(facti,1)))],length(allfacts)/2-1) %>% t %>% as_tibble(.name_repair = "minimal")
combn(allfacts[!(allfacts %in% c(facti,paste0(facti,1)))],length(allfacts)/2-1) %>% t %>% as_tibble(.name_repair = "unique")
#these are the all the combinations of P-1 factors from 2 populations
allperms<-combn(allfacts[!(allfacts %in% c(facti,paste0(facti,1)))],length(allfacts)/2-1) %>% t %>% as_tibble(.name_repair = "universal")
apply(allperms, 1, function(x) length(which(x %in% allfacts1)))
apply(allperms, 1, function(x) length(which(x %in% allfacts0)))
allperms
allperms %>% mutate(
#c0s=ifelse(count0s %in% c(0,(length(allfacts)/2-1)),0,count0s),
#c1s=ifelse(count1s %in% c(0,(length(allfacts)/2-1)),0,count1s),
eqp=map_dfc(0:floor(nfact/2),~ifelse(count0s==.|count1s==.,.,0)) %>% rowSums,
cMs=countmult
) %>% filter(cMs==0) -> allperms
#because we need to distinguish between sets by how many are from pop1 and how many from pop2, we'll count the 1s and absence of 1s
# we also need to remove any sets in which factors come up twice (e.g. age_str and age_str1)
count1s <- apply(allperms, 1, function(x) length(which(x %in% allfacts1)))
count0s <- apply(allperms, 1, function(x) length(which(x %in% allfacts0)))
countmult <- apply(map_df(allperms,~gsub("1","",.)), 1, function(x) sum(duplicated(x)|duplicated(x, fromLast = TRUE)))
allperms %>% mutate(
#c0s=ifelse(count0s %in% c(0,(length(allfacts)/2-1)),0,count0s),
#c1s=ifelse(count1s %in% c(0,(length(allfacts)/2-1)),0,count1s),
eqp=map_dfc(0:floor(nfact/2),~ifelse(count0s==.|count1s==.,.,0)) %>% rowSums,
cMs=countmult
) %>% filter(cMs==0) -> allperms
#make an id for each
allperms$f_id<-paste0("f",1:nrow(allperms))
#these are the parts of the DG 3.54 equation (page 32)
eq_parts <- allperms %>% group_by(eqp) %>%
summarise(
n=n(),
F_eqs=list(f_id)
) %>% ungroup
eq_parts
map_dbl(1:nrow(eq_parts)-1,~nfact*(ncol(combn(nfact-1,.))))
map_dbl(1:1-1,~2*(ncol(combn(2-1,.))))
lapply(list.files("R/",full.names = T),source)
DG_reconvNEW <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*age_str"
)
reconv %>%
mutate(
factfour=jitter(num_offenders/num_reconvicted),
factfive=jitter(ARpO*age_str)
) -> fdat
DG_reconvNEW <- DasGupt_Npop(fdat,
pop=year,
prevalence, age_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*age_str"
)
DG_reconvNEW %>% summarise(sum(diff2004_2005))
fdat %>% mutate(
r=prevalence*age_str
) %>% group_by(year) %>% summarise(rr=sum(r)) %>%
mutate(diff=c(0,diff(rr,lag=1)))
DG_reconvNEW$diff2004_2005
DG_reconv$diff2004_2005
DG_reconv$pop2004
DG_reconvNEW$pop2004
reconv %>%
group_by(year,Gender,Age) %>%
summarise(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
rate = proportion_reconvicted*proportion_totaloffenders
) %>% print %>%
group_by(year) %>%
summarise(
rate=sum(rate)
)
reconv %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted
)
reconv
reconv %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
arpo1=proportion_reconvicted*frequency_reconvicted
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
arpo1=proportion_reconvicted*frequency_reconvicted
) %>% group_by(year) %>% mean(arpo1)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
arpo1=proportion_reconvicted*frequency_reconvicted
) %>% group_by(year) %>% mean(arpo1,na.rm=T)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
arpo1=proportion_reconvicted*frequency_reconvicted
) %>% group_by(year)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
arpo1=proportion_reconvicted*frequency_reconvicted
) %>% group_by(year) %>% summarise(mean(arpo1,na.rm=T))
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
arpo1=proportion_reconvicted*frequency_reconvicted
) %>% group_by(year) %>%
summarise(
sum(arpo1*proportion_totaloffenders)
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
) %>% group_by(year) %>%
summarise(
sum(frequency_reconvicted*proportion_reconvicted*proportion_totaloffenders)
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted,
) %>% group_by(year) %>%
summarise(
ARpO = sum(frequency_reconvicted*proportion_reconvicted*proportion_totaloffenders)
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted
) %>% group_by(year) %>%
summarise(
ARpO = sum(frequency_reconvicted*proportion_reconvicted*proportion_totaloffenders)
)
reconv %>% select(-age_str,-prevalence,-frequency) %>%
mutate(
proportion_reconvicted = num_reconvicted / num_offenders,
proportion_totaloffenders = num_offenders / total,
frequency_reconvicted = num_reconvictions / num_reconvicted
) %>% group_by(year) %>%
summarise(
`avg reconvs per offender` = sum(frequency_reconvicted*proportion_reconvicted*proportion_totaloffenders)
)
devtools::build_vignettes()
devtools::build_vignettes()
