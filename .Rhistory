mutate(
rate=rate*100
) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02"))+
ylim(20,40)+
NULL
reconv %>%
mutate(rate = prevalence*pop_str) %>%
group_by(year) %>%
summarise(
rate=sum(rate),
factor="crude"
) %>%
bind_rows(.,
reconv_DG %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year)))
) %>%
mutate(
rate=rate*100
) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02"))+
#ylim(20,40)+
NULL
data(reconv)
reconv <-
reconv %>% mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted,
pop_str = offenders/convicted_population
)
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
)
reconv %>%
mutate(rate = prevalence*pop_str) %>%
group_by(year) %>%
summarise(
rate=sum(rate),
factor="crude"
) %>%
bind_rows(.,
reconv_DG %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year)))
) %>%
mutate(
rate=rate*100
) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02"))+
#ylim(20,40)+
NULL
reconv
lm(prevalence~time*pop_str,data=reconv)
lm(prevalence~year*pop_str,data=reconv)
gam(prevalence~year*pop_str,data=reconv)
require(mgcv)
bam(prevalence~year*pop_str,data=reconv)
m1<-bam(prevalence~year*pop_str,data=reconv)
plot(m1)
summary(m1)
m1<-bam(prevalence~t(year,pop_str),data=reconv)
?t
m1<-bam(prevalence~t1(year,pop_str),data=reconv)
?bam
m1<-bam(prevalence~te(year,pop_str),data=reconv)
summary(m1)
plot(m1)
summary(m1)
?devtools::install_github()
vignette(reconviction_vignette)
require(DasGuptR)
vignette(reconviction_vignette)
?vignette()
vignette("DasGuptR")
vignette(DasGuptR)
vignette("reconviction_vignette")
browseVignettes("DasGuptR")
devtools::install_github("josiahpjking/DasGuptR",force=T,build_vignettes=TRUE)
browseVignettes("DasGuptR")
vignette(package="DasGuptR")
vignette("Exploring reconvictions in Scotland with Das Gupta")
devtools::install_github("josiahpjking/DasGuptR",force=T,build_vignettes=TRUE)
vignette(package="DasGuptR")
require(devtools)
require(roxygen2)
document()
build_vignettes()
build_vignettes()
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
require(kableExtra)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
require(kableExtra)
library(tidyverse)
library(DasGuptR)
data(reconv)
str(reconv)
reconv %>% filter(year==2004) %>%
group_by(Gender, convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>%
select(-reconvictions) %>%
bind_rows(.,
reconv %>% filter(year==2004) %>%
group_by(convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>% mutate(Gender="All") %>%
select(-reconvictions)
) %>%
mutate(
prop_reconvicted = reconvicted/offenders,
prop_offenders = offenders/convicted_population,
crude_rate = prop_reconvicted*prop_offenders
) %>% select(Gender,offenders,reconvicted,convicted_population,prop_reconvicted, prop_offenders,crude_rate) %>%
kable(.,digits=2) %>%
row_spec(3, bold = T, color = "white", background = "#555555") %>%
column_spec(7,bold=T)
reconv %>%
mutate(
prop_reconvicted = reconvicted / offenders,
prop_totaloffenders = offenders / convicted_population
) %>%
group_by(year) %>%
summarise(
rate=sum(prop_reconvicted*prop_totaloffenders)
)
# reconv %>%
#   mutate(
#     prop_reconvicted = reconvicted / offenders,
#     prop_totaloffenders = offenders / convicted_population,
#     freq_reconvicted = reconvictions / reconvicted
#   ) %>%
#   group_by(year) %>%
#   summarise(
#     `avg reconvs per offender` = sum(freq_reconvicted*prop_reconvicted*prop_totaloffenders)
#   )
reconv %>% filter(year==2004) %>%
group_by(Gender, convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>%
bind_rows(.,
reconv %>% filter(year==2004) %>%
group_by(convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>% mutate(Gender="All")
) %>%
mutate(
prop_reconvicted = reconvicted/offenders,
prop_offenders = offenders/convicted_population,
freq_reconvicted = reconvictions/reconvicted,
crude_rate = prop_reconvicted*prop_offenders*freq_reconvicted
) %>% select(Gender,reconvicted,reconvictions,freq_reconvicted,prop_reconvicted, prop_offenders,crude_rate) %>%
kable(.,digits=2) %>%
row_spec(3, bold = T, color = "white", background = "#555555") %>%
column_spec(5,bold=T)
reconv %>% group_by(year) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>%
mutate(
prevalence=round(reconvicted/offenders,3),
frequency=round(reconvictions/reconvicted,3)
) %>% select(year,prevalence,frequency,offenders,reconvicted,reconvictions) %>%
head %>% rbind(.,"...") %>% kable() %>%
column_spec(1:3,bold=T,color="white",background = "#D7261E") %>%
column_spec(4:6, color = "grey10") %>%
add_header_above(c("Population" = 1, "Decomposition Factors" = 2, "Raw numbers" = 3),background="white",color="grey70")
reconv %>%
mutate(
prevalence=round(reconvicted/offenders,3),
frequency=round(reconvictions/reconvicted,3),
pop_str=round(offenders/convicted_population,3)
) %>% select(year,Gender,Age,prevalence,frequency,pop_str,offenders,reconvicted,reconvictions) %>%
head %>% rbind(.,"...") %>% kable() %>%
column_spec(1:6,bold=T,color="white",background = "#D7261E") %>%
column_spec(7:9, color = "grey10") %>%
add_header_above(c("Population" = 1, "ID variables" = 2, "Decomposition factors" = 3, "Raw numbers" = 3),background="white",color="grey70")
# create our decomposition factors
reconv <-
reconv %>%
mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted, #not used here
pop_str = offenders/convicted_population
) %>%
filter(year %in% 2004:2007) #the output is pretty cumbersome, so lets keep it at 4 years for now
#standardize and decompose!
reconv_DG <- DasGupt_Npop(data=subset_reconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
# the default ratefunction calculates rate as the product of all specified factors
# in theory this function works with any function you like.
)
# create our decomposition factors
reconv <-
reconv %>%
mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted, #not used here
pop_str = offenders/convicted_population
) %>%
filter(year %in% 2004:2007) #the output is pretty cumbersome, so lets keep it at 4 years for now
#standardize and decompose!
reconv_DG <- DasGupt_Npop(data=reconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
# the default ratefunction calculates rate as the product of all specified factors
# in theory this function works with any function you like.
)
# create our decomposition factors
sreconv <-
reconv %>%
mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted, #not used here
pop_str = offenders/convicted_population
) %>%
filter(year %in% 2004:2007) #the output is pretty cumbersome, so lets keep it at 4 years for now
#standardize and decompose!
reconv_DG <- DasGupt_Npop(data=sreconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
# the default ratefunction calculates rate as the product of all specified factors
# in theory this function works with any function you like.
)
sreconv <-
reconv %>%
mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted, #not used here
pop_str = offenders/convicted_population
) %>%
filter(year %in% 2004:2007)
sreconv
DasGupt_Npop(sreconv,pop=year,prevalence,pop_str)
reconv_DG <- DasGupt_Npop(data=sreconv,
pop=year,prevalence, pop_str,
id_vars=c(Age,Gender),ratefunction="prevalence*pop_str"
# the default ratefunction calculates rate as the product of all specified factors
# in theory this function works with any function you like.
)
class(sreconv)
DasGupt_Npop(sreconv,pop=year,prevalence,pop_str,id_vars=c(Age,Gender))
DasGupt_Npop(sreconv,pop=year,prevalence,pop_str,id_vars=c(Age,Gender),ratefunction="prevalence*pop_str")
# create our decomposition factors
sreconv <-
reconv %>%
mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted, #not used here
pop_str = offenders/convicted_population
) %>%
filter(year %in% 2004:2007) #the output is pretty cumbersome, so lets keep it at 4 years for now
#standardize and decompose!
reconv_DG <- DasGupt_Npop(data=sreconv,pop=year,prevalence,pop_str,id_vars=c(Age,Gender),ratefunction="prevalence*pop_str")
reconv <-
reconv %>% mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted,
pop_str = offenders/convicted_population
) %>% filter(year %in% 2004:2009)
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
)
pull(reconv,year) %>% unique
require(tidyverse)
data(reconv)
pull(reconv,year) %>% unique
library("DasGuptR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.6")
pull(reconv,year) %>% unique
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
)
reconv <-
reconv %>% mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted,
pop_str = offenders/convicted_population
) %>% filter(year %in% 2004:2009)
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str"
)
head(reconv)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
require(kableExtra)
library(tidyverse)
library(DasGuptR)
data(reconv)
str(reconv)
reconv %>% filter(year==2004) %>%
group_by(Gender, convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>%
select(-reconvictions) %>%
bind_rows(.,
reconv %>% filter(year==2004) %>%
group_by(convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>% mutate(Gender="All") %>%
select(-reconvictions)
) %>%
mutate(
prop_reconvicted = reconvicted/offenders,
prop_offenders = offenders/convicted_population,
crude_rate = prop_reconvicted*prop_offenders
) %>% select(Gender,offenders,reconvicted,convicted_population,prop_reconvicted, prop_offenders,crude_rate) %>%
kable(.,digits=2) %>%
row_spec(3, bold = T, color = "white", background = "#555555") %>%
column_spec(7,bold=T)
reconv %>%
mutate(
prop_reconvicted = reconvicted / offenders,
prop_totaloffenders = offenders / convicted_population
) %>%
group_by(year) %>%
summarise(
rate=sum(prop_reconvicted*prop_totaloffenders)
)
# reconv %>%
#   mutate(
#     prop_reconvicted = reconvicted / offenders,
#     prop_totaloffenders = offenders / convicted_population,
#     freq_reconvicted = reconvictions / reconvicted
#   ) %>%
#   group_by(year) %>%
#   summarise(
#     `avg reconvs per offender` = sum(freq_reconvicted*prop_reconvicted*prop_totaloffenders)
#   )
reconv %>% filter(year==2004) %>%
group_by(Gender, convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>%
bind_rows(.,
reconv %>% filter(year==2004) %>%
group_by(convicted_population) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>% mutate(Gender="All")
) %>%
mutate(
prop_reconvicted = reconvicted/offenders,
prop_offenders = offenders/convicted_population,
freq_reconvicted = reconvictions/reconvicted,
crude_rate = prop_reconvicted*prop_offenders*freq_reconvicted
) %>% select(Gender,reconvicted,reconvictions,freq_reconvicted,prop_reconvicted, prop_offenders,crude_rate) %>%
kable(.,digits=2) %>%
row_spec(3, bold = T, color = "white", background = "#555555") %>%
column_spec(5,bold=T)
reconv %>% group_by(year) %>%
summarise_at(vars(one_of(c("offenders","reconvicted","reconvictions"))),sum) %>%
mutate(
prevalence=round(reconvicted/offenders,3),
frequency=round(reconvictions/reconvicted,3)
) %>% select(year,prevalence,frequency,offenders,reconvicted,reconvictions) %>%
head %>% rbind(.,"...") %>% kable() %>%
column_spec(1:3,bold=T,color="white",background = "#D7261E") %>%
column_spec(4:6, color = "grey10") %>%
add_header_above(c("Population" = 1, "Decomposition Factors" = 2, "Raw numbers" = 3),background="white",color="grey70")
reconv %>%
mutate(
prevalence=round(reconvicted/offenders,3),
frequency=round(reconvictions/reconvicted,3),
pop_str=round(offenders/convicted_population,3)
) %>% select(year,Gender,Age,prevalence,frequency,pop_str,offenders,reconvicted,reconvictions) %>%
head %>% rbind(.,"...") %>% kable() %>%
column_spec(1:6,bold=T,color="white",background = "#D7261E") %>%
column_spec(7:9, color = "grey10") %>%
add_header_above(c("Population" = 1, "ID variables" = 2, "Decomposition factors" = 3, "Raw numbers" = 3),background="white",color="grey70")
# create our decomposition factors
newreconv <-
reconv %>%
mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted, #not used here
pop_str = offenders/convicted_population
) %>%
filter(year %in% 2004:2007) #the output is pretty cumbersome, so lets keep it at 4 years for now
str(reconv)
#standardize and decompose!
reconv_DG <- DasGupt_Npop(data=newreconv,
pop=year,prevalence, pop_str,
id_vars=c(Age,Gender))
#standardize and decompose!
str(newreconv)
reconv_DG <- DasGupt_Npop(data=newreconv,
pop=year,prevalence, pop_str,
id_vars=c(Age,Gender))
require(roxygen2)
require(devtools)
build_vignettes()
document()
devtools::install_github("josiahpjking/DasGuptR",build_vignettes=T)
library(DasGuptR)
vignette(package="DasGuptR")
data(reconv)
reconv <-
reconv %>% mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted,
pop_str = offenders/convicted_population
)
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str, frequency
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str*frequency"
)
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str, frequency,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str*frequency"
)
require(tidyverse)
require(DasGuptR)
data(reconv)
reconv <-
reconv %>% mutate(
prevalence = reconvicted/offenders,
frequency = reconvictions/reconvicted,
pop_str = offenders/convicted_population
)
reconv_DG <- DasGupt_Npop(reconv,
pop=year,
prevalence, pop_str, frequency,
id_vars=c(Age,Gender),
ratefunction="prevalence*pop_str*frequency"
)
reconv %>%
mutate(rate = prevalence*pop_str) %>%
group_by(year) %>%
summarise(
rate=sum(rate),
factor="crude"
) %>%
bind_rows(.,
reconv_DG %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year)))
) %>%
mutate(
#rate=rate*100
) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02","#c95f02"))+
#ylim(20,40)+
NULL
reconv %>%
mutate(rate = prevalence*pop_str*frequency) %>%
group_by(year) %>%
summarise(
rate=sum(rate),
factor="crude"
) %>%
bind_rows(.,
reconv_DG %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year)))
) %>%
mutate(
#rate=rate*100
) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02","#c95f02"))+
#ylim(20,40)+
NULL
reconv %>%
mutate(rate = prevalence*pop_str*frequency) %>%
group_by(year) %>%
summarise(
rate=sum(rate),
factor="crude"
) %>%
bind_rows(.,
reconv_DG %>%
group_by(factor) %>%
summarise_at(vars(starts_with("pop")),sum) %>%
gather(year,rate,starts_with("pop")) %>%
mutate(year=as.numeric(gsub("pop","",year)))
) %>%
mutate(
#rate=rate*100
) %>%
ggplot(.,aes(x=year,y=rate,col=factor))+
geom_path()+
scale_color_manual(values = c("black","#1b9e77","#d95f02","#c95f02"))+
#ylim(20,40)+
NULL->p
plotly::ggplotly(p)
